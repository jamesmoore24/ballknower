"use strict";(()=>{var e={};e.id=678,e.ids=[678],e.modules={524:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1025:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>A,originalPathname:()=>y,requestAsyncStorage:()=>R,routeModule:()=>T,serverHooks:()=>m,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>f});var n={};t.r(n),t.d(n,{GET:()=>p}),t(5655);var a=t(2482),o=t(4647),i=t(6886);let s=require("better-sqlite3");var u=t.n(s);let l=()=>({path:"/home/ec2-user/data/ballknower.db",readOnly:!1}),d=null;function c(){if(d)return d;try{let e=l();return d=new(u())(e.path,{readonly:e.readOnly}),e.readOnly||d.exec(`
        CREATE TABLE IF NOT EXISTS bets (
          id INTEGER PRIMARY KEY AUTOINCREMENT,
          team TEXT,
          odds REAL,
          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
      `),d}catch(e){return console.warn("Database initialization failed:",e),null}}async function p(){try{let e=function(){let e=c();if(!e)return[];try{return e.prepare("SELECT * FROM bets ORDER BY created_at DESC").all()}catch(e){return console.error("Error getting entries:",e),[]}}();return i.Z.json({entries:e})}catch(e){return console.error("Error fetching entries:",e),i.Z.json({error:"Failed to fetch entries"},{status:500})}}c();let E=a.AppRouteRouteModule,T=new E({definition:{kind:o.x.APP_ROUTE,page:"/api/entries/route",pathname:"/api/entries",filename:"route",bundlePath:"app/api/entries/route"},resolvedPagePath:"/Users/jamesmoore/Documents/ballknower/app/api/entries/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:R,staticGenerationAsyncStorage:h,serverHooks:m,headerHooks:A,staticGenerationBailout:f}=T,y="/api/entries/route"}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[303],()=>t(1025));module.exports=n})();